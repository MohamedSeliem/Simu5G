# Workflow for building and deploying a Sphinx site to GitHub Pages
name: Build and deploy sphinx docs to GitHub Pages from site branch

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["deployed-website"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      prev_doc_version:
        description: 'Documentation version to include (X.Y.Z format)'
        required: true
        type: string

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Sphinx Build
        uses: ammaraskar/sphinx-action@7.1.2
        with:
          docs-folder: doc/src
          build-command: make html
          # Run before the build command, you can use this to install system level dependencies, for example with "apt-get update -y && apt-get install -y perl"
          pre-build-command: doc/src/tools/setup-build-process.sh
      
      - name: Set doc version
        run: echo "DOC_VERSION=${{ github.event.inputs.prev_doc_version || '1.3.0' }}" >> $GITHUB_ENV

      - name: Download previous release documentation
        run: |
          wget https://github.com/Unipisa/Simu5G/releases/download/v${{ env.DOC_VERSION }}/simu5g-${{ env.DOC_VERSION }}-doc.tgz
          tar xzf simu5g-${{ env.DOC_VERSION }}-doc.tgz
          sudo mkdir -p doc/src/_build/html/neddoc
          sudo cp -r neddoc/* doc/src/_build/html/neddoc/
          sudo chown -R $USER:$USER doc/src/_build/html/neddoc
        
      - name: Upload github pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "doc/src/_build/html/"

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy uploaded artifact to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
